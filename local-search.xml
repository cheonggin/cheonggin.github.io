<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>配置webpack</title>
    <link href="/2022/05/31/20220531/"/>
    <url>/2022/05/31/20220531/</url>
    
    <content type="html"><![CDATA[<h1 id="webpack-四个核心概念"><a href="#webpack-四个核心概念" class="headerlink" title="webpack 四个核心概念"></a>webpack 四个核心概念</h1><ul><li>Entry：入口起点(entry point)指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始</li><li>Output：output 属性告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件，默认值为 .&#x2F;dist</li><li>Loader：loader 让 webpack 能够去处理那些非 JavaScript 文件，如 css、png、ts 等等（webpack 自身只能解析： JavaScript、json）</li><li>Plugins：插件则可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量等</li></ul><p>Webpack 本身只能加载 JS&#x2F;JSON 模块，如果要加载其他类型的文件(模块)，就需要使用对应的 loader 进行转换&#x2F;加载</p><p>Loader 本身也是运行在 node.js 环境中的 JavaScript 模块，它本身是一个函数，接受源文件作为参数，返回转换的结果。</p><p>loader 一般以 xxx-loader 的方式命名，xxx 代表了这个 loader 要做的转换功能，比如 sass-loader</p><p>插件件可以完成一些 loader 不能完成的功能，插件的使用一般是在 webpack 的配置信息 plugins 选项中指定</p><p>结论：</p><ul><li>webpack 能够编译打包 js 和 json 文件</li><li>能将 es6 的模块化语法转换成浏览器能识别的语法</li><li>能压缩代码</li></ul><p>缺点：</p><ul><li>不能编译打包 css、img 等文件</li><li>不能将 js 的 es6 基本语法转化为 es5 以下语法</li></ul><p>改善：使用 webpack 配置文件解决，自定义功能</p><h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><h2 id="入口及出口配置"><a href="#入口及出口配置" class="headerlink" title="入口及出口配置"></a>入口及出口配置</h2><p>创建<code>webpack-study</code>文件夹，在文件夹根目录下依次执行以下命令：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm init -ynpm i webpack webpack-cli -gnpm i webpack webpack-cli -D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>在<code>package.json</code>文件中添加<code>scripts</code>命令：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>在根目录下新建<code>webpack.config.js</code>文件，在这个文件下配置 webpack</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 模式，默认为production，不填写打包时会有warning</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  <span class="token comment">// 入口文件 index.js</span>  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token comment">// 输出</span>  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 打包后的输出目录</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 打包后的文件名</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/main.js'</span><span class="token punctuation">,</span>    <span class="token comment">// 打包后自动清除旧的输出目录</span>    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在根目录下新建<code>src/js/sum.js</code>文件</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useSum</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>在根目录下新建<code>src/js/index.js</code>文件，这个文件为入口文件</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useSum <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./sum'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我是main.js'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">useSum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在根目录下新建<code>public/index.html</code>，用于引入打包后的 js 文件</p><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../dist/js/main.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>之后执行<code>npm run build</code>来打包，打开 html 文件查看控制台</p><h2 id="文件的命名规则"><a href="#文件的命名规则" class="headerlink" title="文件的命名规则"></a>文件的命名规则</h2><p>有时候我们处理后的文件名称按照一定的规则进行显示，比如保留原来的文件名、扩展名，同时为了防止重复，包含一个 hash 值等。</p><p>这个时候我们可以使用 PlaceHolders 来完成，webpack 给我们提供了大量的 PlaceHolders 来显示不同的内容，我们可以在<a href="https://webpack.js.org/loaders/file-loader/#placeholders">文档</a>中查阅自己需要的 placeholder</p><p>常用的 placeholder：</p><ul><li><code>[ext]</code>：处理文件的扩展名</li><li><code>[name]</code>：处理文件的名称</li><li><code>[hash]</code>：文件的内容，使用 MD4 的散列函数处理，生成的一个 128 位的 hash 值(32 个十六进制)</li><li><code>[contentHash]</code>：在 file-loader 中和[hash]结果是一致的(在 webpack 的一些其他地方不一样)</li><li><code>[hash:&lt;length&gt;]</code>：截图 hash 的长度，默认 32 个字符太长了</li><li><code>[path]</code>：文件相对于 webpack 配置文件的路径</li></ul><h2 id="loader-配置方式"><a href="#loader-配置方式" class="headerlink" title="loader 配置方式"></a>loader 配置方式</h2><p>module.rules 中允许我们配置多个 loader，这种方式可以更好的表示 loader 的配置，也方便后期的维护，同时也让你对各个 Loader 有一个全局的概览</p><p>module.rules 的配置如下：</p><ul><li>rules 属性对应的值是一个数组：[Rule]</li><li>数组中存放的是一个个的 Rule，Rule 是一个对象，对象中可以设置多个属性：<ul><li>test 属性：用于对 resource(资源)进行匹配的，通常会设置成正则表达式</li><li>use 属性：对应的值时一个数组[UseEntry]，UseEntry 是一个对象，可以通过对象的属性来设置一些其他属性<ul><li>loader：必须有一个 loader 属性，对应的值是一个字符串</li><li>options：可选的属性，值是一个字符串或者对象，值会被传入到 loader 中</li></ul></li></ul></li><li>loader 属性：<code>Rule.use: [ &#123; loader &#125; ]</code>的简写</li></ul><p>传递字符串(如：<code>use: [ &#39;style-loader&#39; ]</code>)是 loader 属性的简写方式(如：<code>use: [ &#123; loader: &#39;style-loader&#39;&#125; ]</code>)</p><h2 id="打包样式"><a href="#打包样式" class="headerlink" title="打包样式"></a>打包样式</h2><p>在<code>public/index.html</code>中添加</p><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在根目录下新建<code>src/assets/styles/index.scss</code>文件夹，用来存放样式文件文件</p><div class="code-wrapper"><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">#app </span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在入口文件<code>index.js</code>中引入 scss 文件</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'../assets/styles/index.scss'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><code>.scss</code>与<code>.sass</code>文件用<code>sass-loader</code>与<code>sass</code>，<code>.less</code> 文件用<code>less-loader</code>与<code>less</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i sass sass-loader style-loader css-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在<code>webpack.config.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|s[ac]ss)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'sass-loader'</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="打包-html"><a href="#打包-html" class="headerlink" title="打包 html"></a>打包 html</h2><p>html 文件 webpack 不能解析，需要借助插件编译解析</p><p>在 public 文件夹下的 html 中不引入任何 css 和 js 文件，修改 title 标签内内容</p><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>  &lt;%= htmlWebpackPlugin.options.title %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>安装插件<code>html-webpack-plugin</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i html-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> htmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">htmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'webpack5-config'</span><span class="token punctuation">,</span>      <span class="token comment">// 指定我们要使用的模块所在的路径</span>      <span class="token literal-property property">template</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'public/index.html'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="打包-css-代码为单独文件"><a href="#打包-css-代码为单独文件" class="headerlink" title="打包 css 代码为单独文件"></a>打包 css 代码为单独文件</h2><p>安装插件<code>mini-css-extract-plugin</code>，使用该插件后不需要使用<code>style-loader</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i mini-css-extract-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|s[ac]ss)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'sass-loader'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// ...</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 将css代码输出到dist/styles文件夹下</span>      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'styles/chunk-[contenthash].css'</span><span class="token punctuation">,</span>      <span class="token literal-property property">ignoreOrder</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="PostCSS"><a href="#PostCSS" class="headerlink" title="PostCSS"></a>PostCSS</h2><p>PostCSS 可以帮助我们进行一些 CSS 的转换和适配，比如自动添加浏览器前缀、css 样式的重置</p><p><code>postcss-preset-env</code>是一个 postcss 的插件，可以帮助我们将一些现代的 CSS 特性，转成大多数浏览器认识的 CSS，并且会根据目标浏览器或者运行时环境添加所需的 polyfill，也包括会自动帮助我们添加 autoprefixer(所以相当于已经内置了 autoprefixer)</p><h3 id="配置方式一"><a href="#配置方式一" class="headerlink" title="配置方式一"></a>配置方式一</h3><p><code>webpack.config.js</code>中配置：</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|s[ac]ss)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>          <span class="token string">'css-loader'</span><span class="token punctuation">,</span>          <span class="token comment">// css适配</span>          <span class="token punctuation">&#123;</span>            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">postcssOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>              <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token string">'sass-loader'</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>package.json</code>中添加以下配置：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"development"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"last 1 chrome version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 firefox version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 safari version"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"production"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">">0.01%"</span><span class="token punctuation">,</span> <span class="token string">"not dead"</span><span class="token punctuation">,</span> <span class="token string">"not op_mini all"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="配置方式二"><a href="#配置方式二" class="headerlink" title="配置方式二"></a>配置方式二</h3><p>方式二不修改<code>package.json</code>文件</p><p>根目录下新建<code>.browserslistrc</code>文件，配置：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># Browsers that we supportlast 1 version&gt; 1%IE 10 # sorry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>根目录下新建<code>postcss.config.js</code>文件，配置：</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><code>webpack.config.js</code>中配置：</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|s[ac]ss)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>          <span class="token string">'css-loader'</span><span class="token punctuation">,</span>          <span class="token comment">// css适配</span>          <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>          <span class="token string">'sass-loader'</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="认识-asset-module-type"><a href="#认识-asset-module-type" class="headerlink" title="认识 asset module type"></a>认识 asset module type</h2><p>当前使用的 webpack 版本是 webpack5，在 webpack5 之前，加载图片资源等我们需要使用一些 loader，比如 <code>url-loader</code>、<code>file-loader</code></p><p>在 webpack5 开始，我们可以直接使用资源模块类型(asset module type)，来替代上面的这些 loader</p><p>资源模块类型(asset module type)，通过添加 4 种新的模块类型，来替换所有这些 loader：</p><ul><li><code>asset/resource</code>：发送一个单独的文件并导出 URL。之前通过使用<code>file-loader</code>实现</li><li><code>passet/inline</code>：导出一个资源的 data URI。之前通过使用<code>url-loader</code>实现</li><li><code>passet/source</code>：导出资源的源代码。之前通过使用<code>raw-loader</code>实现</li><li><code>passet</code>：在导出一个 data URI 和发送一个单独的文件之间自动选择。之前通过使用<code>url-loader</code>，并且配置资源体积限制实现</li></ul><h3 id="加载图片设置"><a href="#加载图片设置" class="headerlink" title="加载图片设置"></a>加载图片设置</h3><p>测试了下，似乎不添加配置也能打包字体与图片，如果要指定打包后文件夹就得配置</p><p>放置一张图片在<code>src/assets/images</code>中，修改<code>index.scss</code>样式</p><div class="code-wrapper"><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token selector">#app </span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">'../images/bg.png'</span><span class="token punctuation">)</span> no-repeat<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>webpack.config.js</code>中配置：</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(png|jpe?g|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'asset/resource'</span><span class="token punctuation">,</span>        <span class="token comment">// 自定义文件的输出路径和文件名</span>        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'images/[name]_[hash:5][ext]'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="加载字体设置"><a href="#加载字体设置" class="headerlink" title="加载字体设置"></a>加载字体设置</h3><p>在<code>public/index.html</code>中添加字体图标标签类</p><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-beian<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>将字体文件放在<code>src/assets/fonts</code>目录下，在<code>index.scss</code>文件中引入字体</p><div class="code-wrapper"><pre class="line-numbers language-scss" data-language="scss"><code class="language-scss"><span class="token keyword">@import</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">'../fonts/iconfont.css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token comment">// ...</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(eot|ttf|woff2?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'asset/resource'</span><span class="token punctuation">,</span>        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'font/[name]_[hash:5][ext]'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="引入favicon-ico图标"><a href="#引入favicon-ico图标" class="headerlink" title="引入favicon.ico图标"></a>引入<code>favicon.ico</code>图标</h2><p>在<code>public</code>文件夹中放入<code>favicon.ico</code>文件，并在 html 文件中引入<code>favicon.ico</code></p><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= BASE_URL %>favicon.ico<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>这个时候运行<code>npm ru build</code>会报错，因为在我们的模块中还使用到一个 BASE_URL 的常量，这个时候我们可以使用 DefinePlugin 插件</p><p>DefinePlugin 允许在编译时创建配置的全局常量，是一个 webpack 内置的插件(不需要单独安装)</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> DefinePlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token constant">BASE_URL</span><span class="token operator">:</span> <span class="token string">'"./"'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="CopyWebpackPlugin"><a href="#CopyWebpackPlugin" class="headerlink" title="CopyWebpackPlugin"></a>CopyWebpackPlugin</h2><p>在上述操作<code>npm run build</code>后发现<code>public</code>目录下的<code>favicon.ico</code>文件并未打包到 dist 目录下，在 dist 目录下运行时仍没有 ico 图标</p><p><code>copy-webpack-plugin</code>插件可以帮助我们将<code>public</code>目录的内容复制到<code>dist</code>文件夹中</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i copy-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在<code>webpack.config.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> copyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'copy-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">copyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">patterns</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>          <span class="token comment">// 设置从哪一个源中开始复制</span>          <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">'./public'</span><span class="token punctuation">,</span>          <span class="token literal-property property">globOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 忽略的文件</span>            <span class="token literal-property property">ignore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'**/index.html'</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="配置-babel"><a href="#配置-babel" class="headerlink" title="配置 babel"></a>配置 babel</h2><p><code>babel</code>可以将我们项目中的高级语法转化成比较低级的语法，比如可以将 ES6 转为 ES5，这样可以兼容一些低版本浏览器，所以是很有必要的</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i babel-loader @babel/core @babel/preset-env -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>由于 babel 是针对 js 文件的语法转换，所以我们需要在 webpack.config.js 中去针对 js 进行操作</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token comment">// ...</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>            <span class="token comment">// 若配置了babel.config.js，则options不用配置</span>            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/preset-env'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>像之前一样，我们可以将 babel 的配置信息放到一个独立的文件中，babel 给我们提供了两种配置文件的编写</p><ul><li><code>babel.config.json</code>(或者.js，.cjs，.mjs)文件</li><li><code>.babelrc.json</code>(或者.babelrc，.js，.cjs，.mjs)文件</li></ul><p>目前很多的项目都采用了多包管理的方式(babel 本身、element-plus、umi 等)</p><p><code>.babelrc.json</code>早期使用较多的配置方式，但是对于配置 Monorepos 项目是比较麻烦的</p><p><code>babel.config.json</code>(babel7)可以直接作用于 Monorepos 项目的子包，更加推荐</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 配置规则</span>    <span class="token string">'@babel/preset-env'</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="自动编译打包运行"><a href="#自动编译打包运行" class="headerlink" title="自动编译打包运行"></a>自动编译打包运行</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i webpack-dev-server -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在<code>webpack.config.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8000</span><span class="token punctuation">,</span> <span class="token comment">// 自定义端口号</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 自动打开浏览器</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>package.json</code>中配置<code>scripts</code>命令：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">"dev"</span><span class="token operator">:</span><span class="token string">"webpack serve"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h2 id="打包-vue-文件"><a href="#打包-vue-文件" class="headerlink" title="打包 vue 文件"></a>打包 vue 文件</h2><p>先安装以下几个包</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i vue vue-loader vue-template-compiler @vue/babel-preset-jsx -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>然后我们需要去<code>webpack.config.js</code>中配置对<code>.vue</code>文件的解析</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> VueLoaderPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue-loader'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token comment">// ...</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'vue-loader'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// ...</span>    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>并且到<code>babel.config.js</code>中配置一下，让 webpack 支持<code>.vue</code>文件中的 jsx 语法</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>    <span class="token string">'@vue/babel-preset-jsx'</span> <span class="token comment">// 支持vue中的jsx语法</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>在 src 下新建一个 App.vue</p><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;box&quot;&gt;    &lt;h1&gt;app...&lt;&#x2F;h1&gt;    &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;&#x2F;p&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script setup&gt;import &#123; ref &#125; from &#39;vue&#39;const msg &#x3D; ref(&#39;hello vue&#39;)&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;.box &#123;  width: 200px;  height: 200px;  background-color: palegreen;&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>然后改写一下<code>src/js/index.js</code></p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'../App.vue'</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="配置路径别名"><a href="#配置路径别名" class="headerlink" title="配置路径别名"></a>配置路径别名</h2><p>有时候文件引用搁着太多层，引用起来会看起来很不明确，比如<code>../../../../../App.vue</code>，所以可以在<code>webpack.config.js</code>中配置一下别名 alias</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string-property property">'@'</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./src'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.js'</span><span class="token punctuation">,</span> <span class="token string">'.ts'</span><span class="token punctuation">,</span> <span class="token string">'.scss'</span><span class="token punctuation">,</span> <span class="token string">'.vue'</span><span class="token punctuation">]</span> <span class="token comment">// 引入文件时省略后缀名</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="区分开发和生成环境配置"><a href="#区分开发和生成环境配置" class="headerlink" title="区分开发和生成环境配置"></a>区分开发和生成环境配置</h2><p>我们不能把所有配置都配置在一个<code>webpack.config.js</code>中，因为我们有两个环境 development(开发环境)、production(生产环境)，所以我们在根目录下创建<code>config</code>文件夹，并创建三个文件<code>webpack.common.js</code>、<code>webpack.prod.js</code>、<code>webpack.dev.js</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i webpack-merge -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><code>webpack.common.js</code></p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> htmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> DefinePlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> VueLoaderPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue-loader'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 入口文件 index.js</span>  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./src/js/index.js'</span><span class="token punctuation">,</span>  <span class="token comment">// 输出</span>  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 打包后的输出目录</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 打包后的文件名</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/main.js'</span><span class="token punctuation">,</span>    <span class="token comment">// 打包后自动清除旧的输出目录</span>    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string-property property">'@'</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../src'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.js'</span><span class="token punctuation">,</span> <span class="token string">'.ts'</span><span class="token punctuation">,</span> <span class="token string">'.scss'</span><span class="token punctuation">,</span> <span class="token string">'.vue'</span><span class="token punctuation">]</span> <span class="token comment">// 引入文件时省略后缀名</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(css|s[ac]ss)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>          <span class="token string">'css-loader'</span><span class="token punctuation">,</span>          <span class="token comment">// css适配</span>          <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>          <span class="token string">'sass-loader'</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(png|jpe?g|gif|svg)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'asset/resource'</span><span class="token punctuation">,</span>        <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 转base64的条件</span>          <span class="token literal-property property">dataUrlCondition</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">maxSize</span><span class="token operator">:</span> <span class="token number">25</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token comment">// 25kb</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 自定义文件的输出路径和文件名</span>        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'images/[name]_[hash:5][ext]'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(eot|ttf|woff2?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'asset/resource'</span><span class="token punctuation">,</span>        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'font/[name]_[hash:5][ext]'</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'vue-loader'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">htmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'webpack-study'</span><span class="token punctuation">,</span>      <span class="token comment">// 指定要使用的模板所在的路径</span>      <span class="token literal-property property">template</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">'/../public/index.html'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 将css代码输出到dist/styles文件夹下</span>      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'styles/chunk-[contenthash].css'</span><span class="token punctuation">,</span>      <span class="token literal-property property">ignoreOrder</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token constant">BASE_URL</span><span class="token operator">:</span> <span class="token string">'"./"'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>webpack.dev.js</code></p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-merge'</span><span class="token punctuation">)</span><span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./webpack.common'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 模式，默认为production，不填写打包时会有warning</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8000</span><span class="token punctuation">,</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 自动打开浏览器</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>webpack.prod.js</code></p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> copyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'copy-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-merge'</span><span class="token punctuation">)</span><span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./webpack.common.js'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 模式，默认为production，不填写打包时会有warning</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">copyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">patterns</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>          <span class="token comment">// 设置从哪一个源中开始复制</span>          <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">'./public'</span><span class="token punctuation">,</span>          <span class="token literal-property property">globOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 忽略的文件</span>            <span class="token literal-property property">ignore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'**/index.html'</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>注意路径修改</strong></p><p>然后修改<code>package.json</code>中<code>scripts</code>命令</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"webpack serve --config ./config/webpack.dev.js"</span><span class="token punctuation">,</span>  <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --config ./config/webpack.prod.js"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="devtool"><a href="#devtool" class="headerlink" title="devtool"></a>devtool</h2><p>此选项控制是否生成，以及如何生成 source map。所有的 source map 模式参考<a href="https://webpack.docschina.org/configuration/devtool/#root">webpack 官网</a></p><ul><li>development：使用 eval-cheap-module-source-map 模式，能具体定位到源码位置和源码展示，适合开发模式，体积较小</li><li>production：使用 nosources-source-map，只能定位源码位置，不能源码展示，体积较小，适合生产模式</li></ul><p>在<code>webpack.dev.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-cheap-module-source-map'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>在<code>webpack.prod.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'nosources-source-map'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>生产环境代码需要部署到服务器上才能运行，serve 这个库能帮助我们快速搭建一个静态资源服务器</p><ul><li><code>npm i serve -g</code></li><li><code>serve -s dist -p 8000</code></li></ul><h2 id="构建进度条"><a href="#构建进度条" class="headerlink" title="构建进度条"></a>构建进度条</h2><p>无论是启动项目时还是打包时，都需要进度条的展示，所以需要把进度条配置在<code>webpack.common.js</code>中，我们需要先安装进度条的插件<code>progress-bar-webpack-plugin</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i progress-bar-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> ProgressBarPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'progress-bar-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'chalk'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// ...</span>    <span class="token keyword">new</span> <span class="token class-name">ProgressBarPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> build [:bar] </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span>green<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token string">':percent'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> (:elapsed seconds)</span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="构建时间优化"><a href="#构建时间优化" class="headerlink" title="构建时间优化"></a>构建时间优化</h2><p>多进程打包，可以大大提高构建的速度，使用方法是将 thread-loader 放在比较费时间的 loader 之前，比如 babel-loader</p><p>由于启动项目和打包项目都需要加速，所以配置在<code>webpack.common.js</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i thread-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>将之前配置<code>babel-loader</code>的位置修改</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'thread-loader'</span><span class="token punctuation">,</span> <span class="token string">'babel-loader'</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="开启热更新"><a href="#开启热更新" class="headerlink" title="开启热更新"></a>开启热更新</h2><p>比如你修改了项目中某一个文件，会导致整个项目刷新，这非常耗时间。如果只刷新修改的这个模块，其他保持原状，那将大大提高修改代码的重新构建时间</p><p>只用于开发中，所以配置在<code>webpack.dev.js</code></p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    <span class="token literal-property property">hot</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="CSS-代码压缩"><a href="#CSS-代码压缩" class="headerlink" title="CSS 代码压缩"></a>CSS 代码压缩</h2><p>CSS 代码压缩使用<code>css-minimizer-webpack-plugin</code>，效果包括压缩、去重</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i css-minimizer-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>代码的压缩比较耗时间，所以只用在打包项目时，所以只需要在<code>webpack.prod.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'css-minimizer-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">//  ...</span>    <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 去重压缩css</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="JS-代码压缩"><a href="#JS-代码压缩" class="headerlink" title="JS 代码压缩"></a>JS 代码压缩</h2><p>JS 代码压缩使用<code>terser-webpack-plugin</code>，实现打包后 JS 代码的压缩</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i terser-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'terser-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token comment">// ...</span>      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 压缩JS代码</span>        <span class="token literal-property property">terserOptions</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">drop_console</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 去除console</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="打包体积分析"><a href="#打包体积分析" class="headerlink" title="打包体积分析"></a>打包体积分析</h2><p>使用<code>webpack-bundle-analyzer</code>可以审查打包后的体积分布，进而进行相应的体积优化</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm i webpack<span class="token operator">-</span>bundle<span class="token operator">-</span>analyzer <span class="token operator">-</span><span class="token constant">D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>只需要打包时看体积，所以只需在<code>webpack.prod.js</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> BundleAnalyzerPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-bundle-analyzer'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">//  ...</span>    <span class="token keyword">new</span> <span class="token class-name">BundleAnalyzerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="Gzip"><a href="#Gzip" class="headerlink" title="Gzip"></a>Gzip</h2><p>开启 Gzip 后，大大提高用户的页面加载速度，因为 gzip 的体积比原文件小很多，当然需要后端的配合，使用 <code>compression-webpack-plugin</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i compression-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> CompressionPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'compression-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// ...</span>    <span class="token keyword">new</span> <span class="token class-name">CompressionPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">'gzip'</span><span class="token punctuation">,</span>      <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>      <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h1><h2 id="Eslint"><a href="#Eslint" class="headerlink" title="Eslint"></a>Eslint</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i eslint -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>首先通过命令创建<code>.eslintrc.js</code>文件。 执行</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx eslint --init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><img src="/2022/05/31/20220531/2022-05-31-22-34-33.png" class=""><img src="/2022/05/31/20220531/2022-05-31-22-34-51.png" class=""><p>配置<code>.eslintignore</code>，eslint 有时会校验一些我们不想让它校验的文件，我们可以加一下这个配置</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">config&#x2F;node_modules&#x2F;.husky.localdist&#x2F;public<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>我们现在只是完成了 Eslint 的自身配置，但是我们的目的是要开发构建时能在终端提示语法错误，所以需要将 Eslint 配置在<code>webpack.dev.js</code>中</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i eslint-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> ESLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'eslint-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">ESLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 运行的时候自动帮你修复错误</span>      <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="Prettier"><a href="#Prettier" class="headerlink" title="Prettier"></a>Prettier</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i prettier -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>根目录下配置<code>.prettierrc</code>文件</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;useTabs&quot;: false,  &quot;tabWidth&quot;: 2,  &quot;printWidth&quot;: 80,  &quot;singleQuote&quot;: true,  &quot;trailingComma&quot;: &quot;none&quot;,  &quot;semi&quot;: false,  &quot;arrowParens&quot;: &quot;avoid&quot;,  &quot;space-before-function-paren&quot;: true&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>项目下新建<code>.prettierignore</code></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 忽略格式化文件 (根据项目需要自行添加)node_modulesdist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h2 id="解决-Prettier-和-ESLint-的冲突"><a href="#解决-Prettier-和-ESLint-的冲突" class="headerlink" title="解决 Prettier 和 ESLint 的冲突"></a>解决 Prettier 和 ESLint 的冲突</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i eslint-plugin-prettier eslint-config-prettier -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在<code>.eslintrc.js</code>添加 prettier 插件</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">'plugin:vue/essential'</span><span class="token punctuation">,</span>    <span class="token string">'standard'</span><span class="token punctuation">,</span><span class="token string">'plugin:prettier/recommended'</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="husky-和-lint-staged-构建代码工作流"><a href="#husky-和-lint-staged-构建代码工作流" class="headerlink" title="husky 和 lint-staged 构建代码工作流"></a>husky 和 lint-staged 构建代码工作流</h2><p>虽然我们已经要求项目使用 eslint 了，但是不能保证其它成员提交代码之前都将 eslint 中的问题解决掉了，也就是我们希望保证代码仓库中的代码都是符合 eslint 规范的。</p><p>可以通过 Husky 工具在其它成员执行<code>git commit</code>命令的时候对其进行校验，如果不符合 eslint 规范，那么自动通过规范进行修复</p><p>husky 是一个 git hook 工具，可以帮助我们触发 git 提交的各个阶段：pre-commit、commit-msg、pre-push</p><p>使用自动配置命令：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx husky-init <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="git-commit-规范"><a href="#git-commit-规范" class="headerlink" title="git commit 规范"></a>git commit 规范</h3><p>Commitizen 是一个帮助我们编写规范 commit message 的工具，使用 Commitizen 工具按照统一的风格来 git commit，这样可以快速定位每次提交的内容，方便之后对版本进行控制</p><p>安装 Commitizen</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> commitizen -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>安装 cz-conventional-changelog，并且初始化 cz-conventional-changelog：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx commitizen init cz-conventional-changelog --save-dev --save-exact<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在<code>package.json</code>中配置一个 scripts：</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"commit"</span><span class="token operator">:</span> <span class="token string">"cz"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>每次<code>npm run commit</code>进行代码提交</p><h3 id="代码提交验证"><a href="#代码提交验证" class="headerlink" title="代码提交验证"></a>代码提交验证</h3><p>如果我们按照 cz 来规范了提交风格，但是依然有其它成员通过 <code>git commit</code> 按照不规范的格式提交应该怎么办呢？</p><p>通过 commitlint 来限制提交</p><p>安装 @commitlint&#x2F;config-conventional 和 @commitlint&#x2F;cli</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i @commitlint/config-conventional @commitlint/cli -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在根目录创建<code>commitlint.config.js</code>文件，配置 commitlint</p><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@commitlint/config-conventional'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>使用 husky 生成 commit-msg 文件，验证提交信息</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">"npx --no-install commitlint --edit <span class="token variable">$1</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="安装-lint-staged"><a href="#安装-lint-staged" class="headerlink" title="安装 lint-staged"></a>安装 lint-staged</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i lint-staged -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>修改<code>./husky/pre-commit</code>钩子</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx lint-staged<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>在<code>package.json</code>中配置</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"lint-staged"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">"src/**/*.&#123;js,jsx,ts,.tsx,vue,html,md&#125;"</span><span class="token operator">:</span> <span class="token string">"eslint --config .eslintrc.js"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>config</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode入坑vim指南</title>
    <link href="/2022/05/25/20220525/"/>
    <url>/2022/05/25/20220525/</url>
    
    <content type="html"><![CDATA[<h1 id="vim-模式"><a href="#vim-模式" class="headerlink" title="vim 模式"></a>vim 模式</h1><p>在 Vim 中有 4 种编辑模式，分别是：普通模式、插入模式、可视模式和命令行模式。使用 Vim 进行编辑就需要熟练的在各个模式之间进行切换。</p><span id="more"></span><img src="/2022/05/25/20220525/2022-05-25-13-48-06.png" class=""><h1 id="普通模式"><a href="#普通模式" class="headerlink" title="普通模式"></a>普通模式</h1><h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><p>一般情况下每次进入编辑器的时候默认为普通模式，普通模式下常用的用于移动光标的命令：</p><ul><li><code>h/j/k/l</code>：分别代表着向左，下，上，右的方向移动</li><li><code>w/b</code>：跳到下一个单词开头&#x2F;跳到本单词或上一个单词开头</li><li><code>e/ge</code>：跳到本单词或下一个单词结尾&#x2F;跳到上一个单词结尾</li><li><code>0/$</code>：跳到行首&#x2F;跳到行尾</li><li><code>^</code>：跳到行首开始第一个非空字符串</li><li><code>gg</code>：跳到第一行</li><li><code>G</code>：跳到最后一行</li><li><code>nG/:n</code> ：跳到第 n 行</li><li><code>f&#123;char&#125;/F&#123;char&#125;</code>：跳到下一个字符为 char 的位置&#x2F;跳到上一个字符为 char 的位置</li><li><code>t&#123;char&#125;/T&#123;char&#125;</code>：跳到下一个字符为 char 的前一个字符的位置&#x2F;跳到上一个字符为 char 的后一个字符的位置</li><li><code>;</code>：重复上次的字符查找操作</li><li><code>,</code>：反向查找上次的查找命令</li><li><code>dd</code>：删除并复制光标当前行</li><li><code>yy</code>：复制光标当前行</li><li><code>H</code>：跳转到屏幕的顶部</li><li><code>M</code>：跳转到屏幕的中间</li><li><code>L</code>：跳转到屏幕的底部</li><li><code>(</code>：跳转到上一个句子</li><li><code>)</code>：跳转到下一个句子</li><li><code>&#123;</code>：跳转到上一个段落</li><li><code>&#125;</code>：跳转到下一个段落</li><li><code>u</code>：撤消</li><li><code>Ctrl + r</code>：恢复撤销</li><li><code>p</code>：粘贴</li><li><code>x</code>：删除当前光标所在的字符</li><li><code>r</code>：替换当前光标所在的字符</li><li><code>/&#123;char&#125;</code>：查找字符</li></ul><img src="/2022/05/25/20220525/2022-05-25-14-14-28.png" class=""><img src="/2022/05/25/20220525/2022-05-25-14-15-31.png" class=""><h1 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h1><p>在插入模式我们能够进行插入字符、换行等操作。从普通模式进入插入模式有许多种方式：</p><ul><li><code>i</code>：在光标的前面进行插入</li><li><code>I</code>：在行首进行插入，相当于<code>^i</code></li><li><code>a</code>：在光标的后面进行插入</li><li><code>A</code>：在行尾进行插入，相当于<code>$a</code></li><li><code>o</code>：在光标所在行后面插入新一行</li><li><code>O</code>：在光标所在行前面插入新一行，相当于<code>ko</code></li></ul><img src="/2022/05/25/20220525/2022-05-25-14-23-39.png" class=""><p>通过<code>Esc</code>或<code>ctrl + [</code>可以从插入模式切换到普通模式</p><h1 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h1><p>在普通模式里面我们可以使用<code>v</code>进入可视模式，在可视模式中允许我们通过普通模式中移动光标的方式来选中某一段内容进行操作。</p><h1 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h1><p>在普通模式中我们输入<code>:</code>会进入命令模式，在命令模式中我们可以使用与 shell 下的命令行类似的命令</p><p>常用命令：</p><ul><li><code>:wq</code>：保存并退出</li><li><code>:q!</code>：强制退出</li></ul><h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h1><p>常用操作：</p><ul><li><code>d</code>：删除并复制</li><li><code>c</code>：修改，删除并进入插入模式</li><li><code>y</code>：复制</li></ul><h1 id="文本对象"><a href="#文本对象" class="headerlink" title="文本对象"></a>文本对象</h1><p>文本对象能够让我们不移动光标的情况下来操作一定区域内的内容。比如：</p><ul><li><code>i&quot;</code>：选中双引号内的内容不包含双引号</li><li><code>a&quot;</code>：选中双引号内的内容包含双引号</li></ul><img src="/2022/05/25/20220525/2022-05-25-14-45-52.png" class=""><h1 id="操作符跟文本对象的结合使用"><a href="#操作符跟文本对象的结合使用" class="headerlink" title="操作符跟文本对象的结合使用"></a>操作符跟文本对象的结合使用</h1><p>结合跳转的一些例子：</p><ul><li><code>y$</code>：复制当前位置到行尾的所有内容</li><li><code>dw</code>：删除当前位置到下一个单词的开头</li><li><code>c&#125;</code>：修改当前位置到这个段落的结尾</li><li><code>d(</code>：删除到句子的开头</li></ul><p>结合数字的一些例子：</p><ul><li><code>y2h</code>：向左拷贝两个字符</li><li><code>d2w</code>：删除后两个单词</li><li><code>c2j</code>：修改后面两行</li></ul><p>结合 i 和 a 的一些例子：</p><ul><li><code>di(</code>：删除括号内的内容</li><li><code>di&#123;</code>：删除大括号内的内容</li><li><code>diw</code>：删除光标所在的单词</li><li><code>da(</code>：删除括号和括号内的内容</li><li><code>da&#123;</code>：删除大括号和大括号内的内容</li><li><code>daw</code>：删除光标所有的单词以及周围的空白</li><li><code>df&#123;char&#125;</code>：删除到下一个 char 字符，包含 char 字符</li><li><code>dt&#123;char&#125;</code>：从当前位置删除到某个字符前为止，不包含 char 字符</li></ul><h1 id="切换大小写"><a href="#切换大小写" class="headerlink" title="切换大小写"></a>切换大小写</h1><ul><li><code>~</code>：将光标下的字母改变大小写</li><li><code>3~</code>：将光标位置开始的 3 个字母改变大小写</li><li><code>g~~</code>：改变当前行字母的大小写</li><li><code>gUU</code>：将当前行字母改成大写</li><li><code>guu</code>：将当前行字母改成小写</li><li><code>gUaw(gUiw)</code>：将光标下的单词改成大写</li><li><code>guaw(guiw)</code>：将光标下的单词改成小写</li></ul><h1 id="vim-surround"><a href="#vim-surround" class="headerlink" title="vim-surround"></a>vim-surround</h1><p>以<code>hello world</code>为例</p><ul><li>给<code>hello</code>加单引号，<code>ysiw&#39;</code></li><li>将 hello 单词的引号改为<code>()</code>，<code>cs&#39;(</code></li><li>将 hello 单词的<code>()</code>改为 html 的 h1 标签，<code>cs(t</code>后输入 h1 标签按回车</li><li>将 hello 单词的<code>h1</code>标签删除，<code>dst</code></li><li>给 hello world 加单引号，<code>yss&#39;</code></li></ul><h1 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h1><ul><li><code>:%s/class/className/g</code>：全局搜索 class 替换为 className</li><li><code>:5,12s/class/className/g</code>：从第 5 行到第 12 行替换 class 为 className</li></ul><h1 id="用-VSCode-开发中常用的操作"><a href="#用-VSCode-开发中常用的操作" class="headerlink" title="用 VSCode 开发中常用的操作"></a>用 VSCode 开发中常用的操作</h1><h2 id="函数定义之类："><a href="#函数定义之类：" class="headerlink" title="函数定义之类："></a>函数定义之类：</h2><ul><li><code>gd</code>：进入函数定义</li><li><code>Ctrl+o</code>：从函数定义中返回</li><li><code>gh</code>：查看函数参数等信息</li></ul><h2 id="切换标签页："><a href="#切换标签页：" class="headerlink" title="切换标签页："></a>切换标签页：</h2><ul><li><code>gt</code>：切换到下一个标签页</li><li><code>gT</code>：切换到上一个标签页</li><li><code>4gt</code>：切换到第 4 个标签页</li></ul><p>其他：可以使用<code>Ctrl + 0</code>来将光标从编辑器跳转到文件栏，在文件栏可以使用 j 和 k 进行移动，可以使用 Space 展开或者关闭文件夹，使用 l 可以将光标选中的文件在编辑器中打开。</p><p>还有如果使用侧边栏打开文件，可以使用 Ctrl + 1 跟 Ctrl + 2 实现跳转。</p><h2 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h2><ul><li><code>:vs</code>：左右分屏</li><li><code>zc</code>：折叠代码块</li><li><code>zo</code>：展开代码块</li></ul>]]></content>
    
    
    <categories>
      
      <category>config</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vim</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github actions部署nestjs项目到服务器</title>
    <link href="/2022/05/24/20220524/"/>
    <url>/2022/05/24/20220524/</url>
    
    <content type="html"><![CDATA[<h1 id="更新-ubuntu-软件源"><a href="#更新-ubuntu-软件源" class="headerlink" title="更新 ubuntu 软件源"></a>更新 ubuntu 软件源</h1><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><span id="more"></span><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> upgrade -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><h2 id="安装-node"><a href="#安装-node" class="headerlink" title="安装 node"></a>安装 node</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nodejs -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">npm</span> -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="npm-设置淘宝源"><a href="#npm-设置淘宝源" class="headerlink" title="npm 设置淘宝源"></a>npm 设置淘宝源</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="全局安装-pm2、n"><a href="#全局安装-pm2、n" class="headerlink" title="全局安装 pm2、n"></a>全局安装 pm2、n</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> i pm2 n -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="更新-node-版本为最新的-lts"><a href="#更新-node-版本为最新的-lts" class="headerlink" title="更新 node 版本为最新的 lts"></a>更新 node 版本为最新的 lts</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> n lts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="安装-nginx"><a href="#安装-nginx" class="headerlink" title="安装 nginx"></a>安装 nginx</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="安装-mysql"><a href="#安装-mysql" class="headerlink" title="安装 mysql"></a>安装 mysql</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> mysql-server -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="检查-MySQL-是否正常启动"><a href="#检查-MySQL-是否正常启动" class="headerlink" title="检查 MySQL 是否正常启动"></a>检查 MySQL 是否正常启动</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl status mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h1 id="配置-ssh-deploy"><a href="#配置-ssh-deploy" class="headerlink" title="配置 ssh deploy"></a>配置 ssh deploy</h1><p>在服务器生成密钥</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -m PEM -t rsa -b <span class="token number">4096</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>将公钥保存到<code>authorized_keys</code>文件中</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h1 id="设置-Secrets"><a href="#设置-Secrets" class="headerlink" title="设置 Secrets"></a>设置 Secrets</h1><p>在服务器创建存放项目的文件夹，给文件夹所有权限</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R 用户名 文件夹名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><ol><li><code>SSH_PRIVATE_KEY</code>：服务器私钥</li><li><code>REMOTE_HOST</code>：服务器 ip 或域名</li><li><code>REMOTE_USER</code>：服务器登录用户名</li><li><code>REMOTE_PASSWORD</code>：服务器登录密码</li><li><code>TARGET</code>：打包后的文件存放在服务器哪个目录下</li></ol><h1 id="编写-workflow-文件"><a href="#编写-workflow-文件" class="headerlink" title="编写 workflow 文件"></a>编写 workflow 文件</h1><p>创建<code>.github/workflows/deploy.yml</code>文件，配置如下：</p><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy<span class="token comment"># 触发条件：在 push 到 main 分支后</span><span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> main<span class="token comment"># 任务</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>    <span class="token comment"># 服务器环境：最新版 Ubuntu</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">strategy</span><span class="token punctuation">:</span>      <span class="token key atrule">matrix</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>16.x<span class="token punctuation">]</span>    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Use Node.js $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> matrix.node<span class="token punctuation">-</span>version <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token string">'npm'</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> build        <span class="token key atrule">run</span><span class="token punctuation">:</span> npm i <span class="token important">&amp;&amp;</span> npm run build      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy To Server        <span class="token key atrule">uses</span><span class="token punctuation">:</span> easingthemes/ssh<span class="token punctuation">-</span>deploy@main        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token key atrule">SSH_PRIVATE_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.SSH_PRIVATE_KEY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">ARGS</span><span class="token punctuation">:</span> <span class="token string">'-rltgoDzvO --delete'</span>          <span class="token key atrule">SOURCE</span><span class="token punctuation">:</span> <span class="token string">'dist/'</span>          <span class="token key atrule">REMOTE_HOST</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_HOST <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">REMOTE_USER</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_USER <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">TARGET</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.TARGET <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> copy file via ssh password        <span class="token key atrule">uses</span><span class="token punctuation">:</span> appleboy/scp<span class="token punctuation">-</span>action@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_HOST <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_USER <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_PASSWORD <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">port</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_PORT <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">source</span><span class="token punctuation">:</span> <span class="token string">'package.json'</span>          <span class="token key atrule">target</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.TARGET <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">overwrite</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> executing remote ssh commands using password        <span class="token key atrule">uses</span><span class="token punctuation">:</span> appleboy/ssh<span class="token punctuation">-</span>action@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_HOST <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_USER <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_PASSWORD <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">port</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.REMOTE_PORT <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">            rm -rf /workspace/mall/public            cp /workspace/.env /workspace/mall            cp -r /workspace/public /workspace/mall/apps/            cd /workspace/mall            npm i            pm2 delete mangement            pm2 delete web            pm2 start /workspace/mall/apps/mangement/main.js --name=mangement            pm2 start /workspace/mall/apps/web/main.js --name=web            pm2 save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h1><p>去<a href="https://www.digitalocean.com/community/tools/nginx?domains.0.php.php=false&domains.0.reverseProxy.reverseProxy=true&domains.0.routing.root=false&global.app.lang=zhCN">NGINXCONFIG</a> 配置 nginx</p><p>在 vscode 中安装<code>remote-ssh</code>插件，连接服务器</p><p>给<code>/etc/nginx</code>文件夹权限</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R 用户名 /etc/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>将配置好的 nginx 文件下载下来，上传到服务器<code>/etc/nginx</code></p><p>创建当前 NGINX 配置的<strong>备份</strong>：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -czvf nginx_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">'%F_%H-%M-%S'</span><span class="token variable">)</span></span>.tar.gz nginx.conf sites-available/ sites-enabled/ nginxconfig.io/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>使用 tar<strong>解压</strong>新的压缩配置：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tar</span> -xzvf 配置文件夹名称 <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">chmod</span> 0644<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>如果使用 https，则在<code>/etc/nginx</code>目录下生成<code>dhparam.pem</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> openssl dhparam -out dhparam.pem <span class="token number">2048</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>重启 nginx 使配置生效：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nginx -s stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nginx -c /etc/nginx/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>config</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nestjs</tag>
      
      <tag>deploy</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>categories</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[.navbar .navbar-brand:hover {  color: #4954ef;}.pagination a:hover,.pagination .current {  color: #fff;}]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
