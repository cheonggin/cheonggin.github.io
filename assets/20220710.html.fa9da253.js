import{_ as n,o as s,c as a,d as e}from"./app.1a7446ac.js";const p={},t=e(`<h2 id="es6" tabindex="-1"><a class="header-anchor" href="#es6" aria-hidden="true">#</a> ES6</h2><h3 id="\u6807\u7B7E\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6807\u7B7E\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u6807\u7B7E\u6A21\u677F\u5B57\u7B26\u4E32</h3><p>\u901A\u5E38\u8C03\u7528\u51FD\u6570\u7684\u65B9\u6CD5\u662F\u901A\u8FC7<code>()</code>\uFF0C\u5F53\u4F7F\u7528\`\`\u6765\u8C03\u7528\u65F6\uFF0C\u79F0\u4E3A\u6807\u7B7E\u6A21\u677F\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
foo<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// [ &#39;&#39; ] undefined undefined</span>
foo<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">HelloWorld</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// [ &#39;HelloWorld&#39; ] undefined undefined</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;kobe&#39;</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span>
foo<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">Wo</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">rld</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// [ &#39;Hello&#39;, &#39;Wo&#39;, &#39;rld&#39; ] &#39;kobe&#39; 18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F9D\u7136\u662F\u6A21\u5757\u5B57\u7B26\u4E32\u4E2D\u6574\u4E2A\u5B57\u7B26\u4E32\uFF0C\u53EA\u662F\u88AB\u5207\u6210\u591A\u5757\uFF0C\u653E\u5230\u4E86\u4E00\u4E2A\u6570\u7EC4\u4E2D</li><li>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6A21\u5757\u5B57\u7B26\u4E32\u4E2D\u7684\u7B2C\u4E00\u4E2A<code>\${}</code>\uFF0C\u4F9D\u6B21\u7C7B\u63A8</li></ul><h3 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h3><p>Symbol \u662F ES6 \u4E2D\u65B0\u589E\u7684\u4E00\u4E2A\u57FA\u672C\u6570\u636E\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s3<span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token comment">// name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u65F6\u4E0D\u80FD\u901A\u8FC7<code>.</code>\u8BED\u6CD5\u83B7\u53D6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> gender <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>name1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;kobe&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>age<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name1<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
person<span class="token punctuation">.</span>name1 <span class="token operator">=</span> <span class="token string">&#39;cherry&#39;</span>
person<span class="token punctuation">[</span>gender<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;female&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token comment">// { name1: &quot;cherry&quot;, Symbol(): &quot;kobe&quot;, Symbol(): 18, Symbol(gender): &quot;female&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 Symbol \u4F5C\u4E3A key \u7684\u5C5E\u6027\u540D\uFF0C\u5728\u904D\u5386\u6216<code>Object.keys</code>\u7B49\u4E2D\u662F\u83B7\u53D6\u4E0D\u5230\u8FD9\u4E9B Symbol \u503C\uFF0C\u9700\u8981<code>Object.getOwnPropertySymbols</code>\u65B9\u6CD5\u6765\u83B7\u53D6\u6240\u6709 Symbol \u7684 key</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;name1&#39;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;name1&#39;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [Symbol(), Symbol(), Symbol(gender)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA\u76F8\u540C\u7684 Symbol \u53EF\u4EE5\u4F7F\u7528<code>Symbol.for</code>\u65B9\u6CD5\u6765\u521B\u5EFA\uFF0C\u5E76\u4E14\u53EF\u4EE5\u901A\u8FC7<code>Symbol.keyFor</code>\u65B9\u6CD5\u6765\u83B7\u53D6\u5BF9\u5E94\u7684 key</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sa <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> sb <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sa <span class="token operator">===</span> sb<span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token keyword">const</span> key <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>sa<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// &#39;aaa&#39;</span>
<span class="token keyword">const</span> sc <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sa <span class="token operator">===</span> sc<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h3><p>\u5728 ES6 \u4E4B\u524D\uFF0C\u6211\u4EEC\u5B58\u50A8\u6570\u636E\u7684\u7ED3\u6784\u4E3B\u8981\u6709\u4E24\u79CD\uFF1A\u6570\u7EC4\u3001\u5BF9\u8C61\u3002\u5728 ES6 \u4E2D\u65B0\u589E\u4E86\u53E6\u5916\u4E24\u79CD\u6570\u636E\u7ED3\u6784:Set\u3001Map\uFF0C\u4EE5\u53CA\u5B83\u4EEC\u7684\u53E6\u5916\u5F62\u5F0F WeakSet\u3001WeakMap</p><p>Set \u662F\u4E00\u4E2A\u65B0\u589E\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u53EF\u4EE5\u7528\u6765\u4FDD\u5B58\u6570\u636E\uFF0C\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u4F46\u662F\u548C\u6570\u7EC4\u7684\u533A\u522B\u662F\u5143\u7D20\u4E0D\u80FD\u91CD\u590D\u3002\u521B\u5EFA Set \u6211\u4EEC\u9700\u8981\u901A\u8FC7 Set \u6784\u9020\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// Set(5) { 1, 3, 5, 9, 7 }</span>
<span class="token keyword">const</span> newArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">const</span> newArr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>s<span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span> <span class="token comment">// [1, 3, 5, 9, 7]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr1<span class="token punctuation">)</span> <span class="token comment">// [1, 3, 5, 9, 7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-\u7684\u5E38\u89C1\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#set-\u7684\u5E38\u89C1\u65B9\u6CD5" aria-hidden="true">#</a> Set \u7684\u5E38\u89C1\u65B9\u6CD5</h4><ul><li>Set \u5E38\u89C1\u7684\u5C5E\u6027 <ul><li>size\uFF1A\u8FD4\u56DE Set \u4E2D\u5143\u7D20\u7684\u4E2A\u6570</li></ul></li><li>Set \u5E38\u7528\u7684\u65B9\u6CD5 <ul><li><code>add(value)</code>\uFF1A\u6DFB\u52A0\u67D0\u4E2A\u5143\u7D20\uFF0C\u8FD4\u56DE Set \u5BF9\u8C61\u672C\u8EAB</li><li><code>delete(value)</code>\uFF1A\u4ECE set \u4E2D\u5220\u9664\u548C\u8FD9\u4E2A\u503C\u76F8\u7B49\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE boolean \u7C7B\u578B</li><li><code>has(value)</code>\uFF1A\u5224\u65AD set \u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\uFF0C\u8FD4\u56DE boolean \u7C7B\u578B</li><li><code>clear()</code>\uFF1A\u6E05\u7A7A set \u4E2D\u6240\u6709\u7684\u5143\u7D20\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C</li><li><code>forEach(callback, [, thisArg])</code>\uFF1A\u901A\u8FC7 forEach \u904D\u5386 set</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">// Set(6) { 1, 3, 5, 9, 7, 8 }</span>
s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [1, 5, 9, 7, 8]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
s<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="weakset" tabindex="-1"><a class="header-anchor" href="#weakset" aria-hidden="true">#</a> WeakSet</h3><p>\u548C Set \u7C7B\u4F3C\u7684\u53E6\u5916\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u79F0\u4E4B\u4E3A WeakSet\uFF0C\u4E5F\u662F\u5185\u90E8\u5143\u7D20\u4E0D\u80FD\u91CD\u590D\u7684\u6570\u636E\u7ED3\u6784</p><p>Set \u548C WeakSet \u533A\u522B\uFF1A</p><ul><li>WeakSet \u4E2D\u53EA\u80FD\u5B58\u653E\u5BF9\u8C61\u7C7B\u578B\uFF0C\u4E0D\u80FD\u5B58\u653E\u57FA\u672C\u6570\u636E\u7C7B\u578B</li><li>WeakSet \u5BF9\u5143\u7D20\u7684\u5F15\u7528\u662F\u5F31\u5F15\u7528\uFF0C\u5982\u679C\u6CA1\u6709\u5176\u4ED6\u5F15\u7528\u5BF9\u67D0\u4E2A\u5BF9\u8C61\u8FDB\u884C\u5F15\u7528\uFF0C\u90A3\u4E48 GC \u53EF\u4EE5\u5BF9\u8BE5\u5BF9\u8C61\u8FDB\u884C\u56DE\u6536</li><li>WeakSet \u4E0D\u80FD\u904D\u5386\uFF0C\u56E0\u4E3A WeakSet \u53EA\u662F\u5BF9\u5BF9\u8C61\u7684\u5F31\u5F15\u7528\uFF0C\u5982\u679C\u6211\u4EEC\u904D\u5386\u83B7\u53D6\u5230\u5176\u4E2D\u7684\u5143\u7D20\uFF0C\u90A3\u4E48\u6709\u53EF\u80FD\u9020\u6210\u5BF9\u8C61\u4E0D\u80FD\u6B63\u5E38\u7684\u9500\u6BC1\uFF0C\u6240\u4EE5\u5B58\u50A8\u5230 WeakSet \u4E2D\u7684\u5BF9\u8C61\u662F\u6CA1\u529E\u6CD5\u83B7\u53D6\u7684</li></ul><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h3><p>Map \u7528\u4E8E\u5B58\u50A8\u6620\u5C04\u5173\u7CFB</p><p>\u5BF9\u8C61\u5B58\u50A8\u6620\u5C04\u5173\u7CFB\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u6216 Symbol \u4F5C\u4E3A\u5C5E\u6027\u540D\u3002\u67D0\u4E9B\u60C5\u51B5\u4E0B\u6211\u4EEC\u53EF\u80FD\u5E0C\u671B\u901A\u8FC7\u5176\u4ED6\u7C7B\u578B\u4F5C\u4E3A key\uFF0C\u6BD4\u5982\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u65F6\u5019\u4F1A\u81EA\u52A8\u5C06\u5BF9\u8C61\u8F6C\u6210\u5B57\u7B26\u4E32\u6765\u4F5C\u4E3A key\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 Map</p><h4 id="map-\u7684\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#map-\u7684\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> Map \u7684\u5E38\u7528\u65B9\u6CD5</h4><ul><li>Map \u5E38\u89C1\u7684\u5C5E\u6027 <ul><li>size\uFF1A\u8FD4\u56DE Map \u4E2D\u5143\u7D20\u7684\u4E2A\u6570</li></ul></li><li>Map \u5E38\u89C1\u7684\u65B9\u6CD5 <ul><li><code>set(key, value)</code>\uFF1A\u5728 Map \u4E2D\u6DFB\u52A0 key\u3001value\uFF0C\u5E76\u4E14\u8FD4\u56DE\u6574\u4E2A Map \u5BF9\u8C61</li><li><code>get(key)</code>\uFF1A\u6839\u636E key \u83B7\u53D6 Map \u4E2D\u7684 value</li><li><code>has(key)</code>\uFF1A\u5224\u65AD\u662F\u5426\u5305\u62EC\u67D0\u4E00\u4E2A key\uFF0C\u8FD4\u56DE Boolean \u7C7B\u578B</li><li><code>delete(key)</code>\uFF1A\u6839\u636E key \u5220\u9664\u4E00\u4E2A\u952E\u503C\u5BF9\uFF0C\u8FD4\u56DE Boolean \u7C7B\u578B</li><li><code>clear()</code>\uFF1A\u6E05\u7A7A\u6240\u6709\u7684\u5143\u7D20</li></ul></li></ul><h3 id="weakmap" tabindex="-1"><a class="header-anchor" href="#weakmap" aria-hidden="true">#</a> WeakMap</h3><p>\u548C Map \u7C7B\u578B\u7684\u53E6\u5916\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u79F0\u4E4B\u4E3A WeakMap\uFF0C\u4E5F\u662F\u4EE5\u952E\u503C\u5BF9\u7684\u5F62\u5F0F\u5B58\u5728\u7684</p><p>WeakMap \u548C Map \u7684\u533A\u522B\uFF1A</p><ul><li>WeakMap \u7684 key \u53EA\u80FD\u4F7F\u7528\u5BF9\u8C61\uFF0C\u4E0D\u63A5\u53D7\u5176\u4ED6\u7684\u7C7B\u578B\u4F5C\u4E3A key</li><li>WeakMap \u7684 key \u5BF9\u5BF9\u8C61\u60F3\u7684\u5F15\u7528\u662F\u5F31\u5F15\u7528\uFF0C\u5982\u679C\u6CA1\u6709\u5176\u4ED6\u5F15\u7528\u5F15\u7528\u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u90A3\u4E48 GC \u53EF\u4EE5\u56DE\u6536\u8BE5\u5BF9\u8C61</li></ul><h2 id="es10" tabindex="-1"><a class="header-anchor" href="#es10" aria-hidden="true">#</a> ES10</h2><h3 id="flat" tabindex="-1"><a class="header-anchor" href="#flat" aria-hidden="true">#</a> flat</h3><p><code>flat()</code>\u65B9\u6CD5\u4F1A\u6309\u7167\u4E00\u4E2A\u53EF\u6307\u5B9A\u7684\u6DF1\u5EA6\u9012\u5F52\u904D\u5386\u6570\u7EC4\uFF0C\u5E76\u5C06\u6240\u6709\u5143\u7D20\u4E0E\u904D\u5386\u5230\u7684\u5B50\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5408\u5E76\u4E3A\u4E00\u4E2A\u65B0\u6570\u7EC4\u8FD4\u56DE</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [0, 1, 2, 3, 4, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flatmap" tabindex="-1"><a class="header-anchor" href="#flatmap" aria-hidden="true">#</a> flatMap</h3><p><code>flatMap()</code>\u65B9\u6CD5\u9996\u5148\u4F7F\u7528\u6620\u5C04\u51FD\u6570\u6620\u5C04\u6BCF\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u5C06\u7ED3\u679C\u538B\u7F29\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002\u5B83\u4E0E map \u8FDE\u7740\u6DF1\u5EA6\u503C\u4E3A 1 \u7684 flat \u51E0\u4E4E\u76F8\u540C\uFF0C\u4F46 flatMap \u901A\u5E38\u5728\u5408\u5E76\u6210\u4E00\u79CD\u65B9\u6CD5\u7684\u6548\u7387\u7A0D\u5FAE\u9AD8\u4E00\u4E9B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello react&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result1 <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> result2 <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span> <span class="token comment">// [ [ &#39;hello&#39;, &#39;world&#39; ], [ &#39;hello&#39;, &#39;vue&#39; ], [ &#39;hello&#39;, &#39;react&#39; ] ]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span> <span class="token comment">// [&#39;hello&#39;, &#39;world&#39;, &#39;hello&#39;, &#39;vue&#39;, &#39;hello&#39;, &#39;react&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-fromentires" tabindex="-1"><a class="header-anchor" href="#object-fromentires" aria-hidden="true">#</a> Object.fromEntires</h3><p><code>Object.fromEntries()</code>\u65B9\u6CD5\u628A\u952E\u503C\u5BF9\u5217\u8868\u8F6C\u6362\u4E3A\u4E00\u4E2A\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherry&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">19</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> entries <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span> <span class="token comment">// [ [ &#39;name&#39;, &#39;cherry&#39; ], [ &#39;age&#39;, 19 ] ]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;cherry&#39;, age: 19 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="es11" tabindex="-1"><a class="header-anchor" href="#es11" aria-hidden="true">#</a> ES11</h2><h3 id="bigint" tabindex="-1"><a class="header-anchor" href="#bigint" aria-hidden="true">#</a> BigInt</h3><p>BigInt \u662F\u4E00\u79CD\u5185\u7F6E\u5BF9\u8C61\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u6CD5\u6765\u8868\u793A\u5927\u4E8E 2^53 - 1 \u7684\u6574\u6570\u3002\u8FD9\u539F\u672C\u662F Javascript \u4E2D\u53EF\u4EE5\u7528 Number \u8868\u793A\u7684\u6700\u5927\u6570\u5B57\u3002BigInt \u53EF\u4EE5\u8868\u793A\u4EFB\u610F\u5927\u7684\u6574\u6570</p><p>\u53EF\u4EE5\u7528\u5728\u4E00\u4E2A\u6574\u6570\u5B57\u9762\u91CF\u540E\u9762\u52A0 n \u7684\u65B9\u5F0F\u5B9A\u4E49\u4E00\u4E2A BigInt \uFF0C\u5982\uFF1A10n\uFF0C\u6216\u8005\u8C03\u7528\u51FD\u6570 BigInt()\uFF08\u4F46\u4E0D\u5305\u542B new \u8FD0\u7B97\u7B26\uFF09\u5E76\u4F20\u9012\u4E00\u4E2A\u6574\u6570\u503C\u6216\u5B57\u7B26\u4E32\u503C</p><p>\u4F7F\u7528 typeof \u6D4B\u8BD5\u65F6\uFF0C BigInt \u5BF9\u8C61\u8FD4\u56DE &quot;bigint&quot;</p><p>\u4F7F\u7528 Object \u5305\u88C5\u540E\uFF0C BigInt \u88AB\u8BA4\u4E3A\u662F\u4E00\u4E2A\u666E\u901A &quot;object&quot;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token number">1n</span><span class="token punctuation">)</span> <span class="token comment">// &#39;bigint&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26</h3><p>\u7A7A\u503C\u5408\u5E76\u64CD\u4F5C\u7B26\uFF08??\uFF09\u662F\u4E00\u4E2A\u903B\u8F91\u64CD\u4F5C\u7B26\uFF0C\u5F53\u5DE6\u4FA7\u7684\u64CD\u4F5C\u6570\u4E3A null \u6216\u8005 undefined \u65F6\uFF0C\u8FD4\u56DE\u5176\u53F3\u4FA7\u64CD\u4F5C\u6570\uFF0C\u5426\u5219\u8FD4\u56DE\u5DE6\u4FA7\u64CD\u4F5C\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token keyword">const</span> foo1 <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">const</span> bar1 <span class="token operator">=</span> foo <span class="token operator">||</span> <span class="token string">&#39;default value&#39;</span>
<span class="token keyword">const</span> bar2 <span class="token operator">=</span> foo <span class="token operator">??</span> <span class="token string">&#39;defualt value&#39;</span>
<span class="token keyword">const</span> bar3 <span class="token operator">=</span> foo1 <span class="token operator">??</span> <span class="token string">&#39;defualt value&#39;</span>
<span class="token keyword">const</span> bar4 <span class="token operator">=</span> str <span class="token operator">??</span> <span class="token string">&#39;default value&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar1<span class="token punctuation">,</span> bar2<span class="token punctuation">,</span> bar3<span class="token punctuation">,</span> bar4 <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;default value&#39;, &#39;default value&#39;, &#39;default value&#39;, true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="es12" tabindex="-1"><a class="header-anchor" href="#es12" aria-hidden="true">#</a> ES12</h2><h3 id="finalizationregistry" tabindex="-1"><a class="header-anchor" href="#finalizationregistry" aria-hidden="true">#</a> FinalizationRegistry</h3><p>FinalizationRegistry \u5BF9\u8C61\u53EF\u4EE5\u8BA9\u4F60\u5728\u5BF9\u8C61\u88AB\u5783\u573E\u56DE\u6536\u65F6\u8BF7\u6C42\u4E00\u4E2A\u56DE\u8C03</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FinalizationRegistry</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CE8\u518C\u5728finalRegistry\u7684\u5BF9\u8C61, \u67D0\u4E00\u4E2A\u88AB\u9500\u6BC1&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherry&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;sunny&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span>

f<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">&#39;p1\u88AB\u6CE8\u518C\u4E86&#39;</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>p2<span class="token punctuation">,</span> <span class="token string">&#39;p2\u88AB\u6CE8\u518C\u4E86&#39;</span><span class="token punctuation">)</span>

p1 <span class="token operator">=</span> <span class="token keyword">null</span>
p2 <span class="token operator">=</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="weakref" tabindex="-1"><a class="header-anchor" href="#weakref" aria-hidden="true">#</a> WeakRef</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FinalizationRegistry</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CE8\u518C\u5728finalRegistry\u7684\u5BF9\u8C61, \u67D0\u4E00\u4E2A\u88AB\u9500\u6BC1&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherry&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1

f<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">&#39;p1\u88AB\u6CE8\u518C\u4E86&#39;</span><span class="token punctuation">)</span>

p1 <span class="token operator">=</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u4E2D\uFF0C\u5F53 p1 \u8D4B\u503C\u4E3A null \u65F6\uFF0C\u5728\u5783\u573E\u56DE\u6536\u673A\u5236\u53BB\u56DE\u6536\u5BF9\u8C61\u65F6\u662F\u4E0D\u4F1A\u53BB\u56DE\u6536 p1 \u5BF9\u8C61\u7684\uFF0C\u56E0\u4E3A\u6B64\u65F6\u6709\u4E2A\u5F3A\u5F15\u7528 p2</p><p>\u5982\u679C\u6211\u4EEC\u9700\u8981\u9500\u6BC1\u53EF\u4EE5\u4F7F\u7528 WeakSet</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FinalizationRegistry</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CE8\u518C\u5728finalRegistry\u7684\u5BF9\u8C61, \u67D0\u4E00\u4E2A\u88AB\u9500\u6BC1&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherry&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
p2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span>
<span class="token comment">//console.log(p2) // WeakSet {{\u2026}}</span>

f<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">&#39;p1\u88AB\u6CE8\u518C\u4E86&#39;</span><span class="token punctuation">)</span>

p1 <span class="token operator">=</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\u4F7F\u7528 WeakSet \u8FD8\u662F\u4E0D\u5408\u9002\uFF0CES12 \u63A8\u51FA\u4E86 WeakRef</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FinalizationRegistry</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CE8\u518C\u5728finalRegistry\u7684\u5BF9\u8C61, \u67D0\u4E00\u4E2A\u88AB\u9500\u6BC1&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherry&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakRef</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span>
<span class="token comment">// console.log(p2.deref()) // {name: &#39;cherry&#39;, age:18 }</span>

f<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> <span class="token string">&#39;p1\u88AB\u6CE8\u518C\u4E86&#39;</span><span class="token punctuation">)</span>

p1 <span class="token operator">=</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="logical-or-assignment" tabindex="-1"><a class="header-anchor" href="#logical-or-assignment" aria-hidden="true">#</a> Logical OR assignment (||=)</h3><p>\u903B\u8F91\u6216\u8D4B\u503C\uFF08x ||= y\uFF09\u8FD0\u7B97\u4EC5\u5728 x \u4E3A\u865A\u503C\u65F6\u8D4B\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&#39;helle javascript&#39;</span>
message <span class="token operator">=</span> message <span class="token operator">||</span> <span class="token string">&#39;default value&#39;</span>
message <span class="token operator">||=</span> <span class="token string">&#39;default value&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="logical-and-assignment" tabindex="-1"><a class="header-anchor" href="#logical-and-assignment" aria-hidden="true">#</a> Logical AND assignment (&amp;&amp;=)</h3><p>\u903B\u8F91\u4E0E\u8D4B\u503C(x &amp;&amp;= y)\u64CD\u4F5C\u7B26\u53EA\u5728 x \u4E3A\u771F\u65F6\u8D4B\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">0</span>

a <span class="token operator">&amp;&amp;=</span> <span class="token number">2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// 2</span>

b <span class="token operator">&amp;&amp;=</span> <span class="token number">2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="logical-nullish-assignment" tabindex="-1"><a class="header-anchor" href="#logical-nullish-assignment" aria-hidden="true">#</a> Logical nullish assignment</h3><p>\u903B\u8F91\u7A7A\u8D4B\u503C\u8FD0\u7B97\u7B26 (x ??= y) \u4EC5\u5728 x \u662F nullish (null \u6216 undefined) \u65F6\u5BF9\u5176\u8D4B\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span>

a<span class="token punctuation">.</span>duration <span class="token operator">??=</span> <span class="token number">10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>duration<span class="token punctuation">)</span> <span class="token comment">// 50</span>

a<span class="token punctuation">.</span>speed <span class="token operator">??=</span> <span class="token number">25</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>speed<span class="token punctuation">)</span> <span class="token comment">// 25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,74),o=[t];function c(l,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","20220710.html.vue"]]);export{r as default};
